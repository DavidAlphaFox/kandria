# Leaf Region File Format
This document is the specification for Leaf's region file format. The format is defined by a combination of textual and ADL descriptions. A more formal definition of ADL can be found in the "adl"(link adl.mess) file.

## Container
Regions are typically delivered through a DEFLATE compressed ZIP archive. Such an archive must have the following file structure:

::
meta.lisp
data
resources/*.png
resources/*.jpg
::

If either the ``meta.lisp`` or ``data`` files are missing, or either are malformed, the archive is considered invalid. If additional files are present, the archive is considered invalid.

## Metadata
The ``meta.lisp`` file must contain data as follows, encoded in standard s-expression format.

:: ADL
file: [ header, information ]

header: {
  identifier: symbol,
  version: symbol
}

information: {
  author: string,
  version: string,
  description: string,
  preview: _pathname
}
::

The ``identifier`` must always be the symbol ``leaf:region``. The ``version`` must be a symbol designating a subclass of ``leaf:version``.

The ``preview``, if not ``null``, must name a file that can be found in the archive under the ``resources`` directory.

## Data Payload
The ``data`` file's contents are version dependent. The following subsections define the format for each version.

### ``v0``
The ``data`` is a file in standard s-expression format with the following data structure.

:: ADL
scene: {
  name: symbol,
  entities: [ entity ]
}

entity: ( player | chunk | entity )

player: {
  location: vector
}

chunk: {
  name: symbol,
  location: vector,
  size: vector,
  background: symbol,
  tileset: symbol,
  layers: [ pathname ]
}

entity: {
  class: symbol,
  initargs: [ initarg ]
}

initarg: [ symbol, T ]

vector: {
  x: real,
  y: real
}
::
